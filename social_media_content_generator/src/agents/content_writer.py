from crewai import Agent
from typing import Dict
from langchain_core.language_models.chat_models import BaseChatModel

class ContentWriter:
    @staticmethod
    def create(llm: BaseChatModel) -> Agent:
        """
        Creates a Content Writer agent that generates engaging social media content.
        
        Args:
            llm (BaseChatModel): The language model to use for the agent
        """
        return Agent(
            role='Content Writer',
            goal='Create engaging and platform-optimized social media content',
            backstory="""You are a creative content writer specialized in social media. 
            You have a talent for crafting compelling messages that drive engagement 
            and understand the nuances of different social media platforms.Do not use hashtags in the content of captions.""",
            tools=[],  # Will add platform-specific tools later
            llm=llm,
            verbose=True
        )

    @staticmethod
    def generate_content(strategy: Dict, platform: str) -> dict:
        """
        Generates content based on the provided strategy and platform.
        
        Args:
            strategy (Dict): Content strategy from the Content Strategist
            platform (str): Target social media platform
            
        Returns:
            dict: Generated content including main text, captions, etc.
        """
        content = {
            "main_content": "",
            "captions": {
                "primary": "",
                "alternatives": []
            },
            "call_to_action": "",
            "platform_specific": {
                "platform": platform,
                "format": "",
                "character_count": 0,
                "best_practices_applied": []
            }
        }
        
        # Content will be generated by the agent during execution
        return content 